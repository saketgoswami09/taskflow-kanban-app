// backend/prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER MODEL (already exists)
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // RELATION: A user can have many boards
  boards    Board[]
}

// NEW BOARD MODEL
model Board {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // RELATION: This board belongs to a user
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // RELATION: A board can have many lists
  lists     List[]
}

// NEW LIST MODEL
model List {
  id        String   @id @default(cuid())
  title     String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // RELATION: This list belongs to a board
  boardId   String
  board     Board    @relation(fields: [boardId], references: [id], onDelete: Cascade)

  // RELATION: A list can have many cards
  cards     Card[]
}

// NEW CARD MODEL
model Card {
  id          String   @id @default(cuid())
  title       String
  order       Int
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // RELATION: This card belongs to a list
  listId      String
  list        List     @relation(fields: [listId], references: [id], onDelete: Cascade)
}